//
//  KKNetworkManager.m
//  CloudMoto
//
//  Created by XXF on 2017/11/3.
//  Copyright © 2017年 zhu. All rights reserved.
//

#import "KKNetworkManager.h"

@implementation KKNetworkManager

//获取验证码
+ (void)getCodeWithPhone:(NSString *)mobile block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:CodeAlgorithm parameters:nil completion:^(BOOL isSuccess, id json)                                                                     {
        KKLog(@"%@",json);
        if (isSuccess) {
            NSString *content;
            NSDictionary *dataDic = json[@"data"];
            NSArray * contentArr = [(NSString *)dataDic[@"code_content"] componentsSeparatedByString:@","];
            if ([(NSString *)contentArr[1] isEqualToString:@"1"]) {
                content = [NSString stringWithFormat:@"%ld",[contentArr[0] integerValue] + [contentArr[2] integerValue]];
            }else if ([(NSString *)contentArr[1] isEqualToString:@"2"]){
                content = [NSString stringWithFormat:@"%ld",[contentArr[0] integerValue] - [contentArr[2] integerValue]];
            }else{
                content = [NSString stringWithFormat:@"%ld",[contentArr[0] integerValue] * [contentArr[2] integerValue]];
            }
            
            NSDictionary *dic = @{@"phone" : mobile,
                                  @"token" : [CP_AES cpStringToAes256_encrypt:mobile type:1],
                                  @"code_content" : [CP_AES cpStringToAes256_encrypt:content type:2],
                                  @"code_token" : dataDic[@"code_token"]};
            KKLog(@"%@",dic);
            [[KKNetWorking getShard] request:GET url:GetValidateCode parameters:dic completion:^(BOOL isSuccess, id json) {
                resultCompletion(isSuccess, json);
                KKLog(@"%@",json);
            }];
        }else{
            resultCompletion(isSuccess, json);
        }
    }];
}

//登录接口
+ (void)loginRequestWithPhone:(NSString *)mobile
                    loginType:(NSInteger)type
                     identify:(NSString *)identify
                        block:(Resultcompletion)resultCompletion
{

    User *user = [UserHelper shareInstance].user;

    NSDictionary *dict = @{@"mobileiden" : mobile,
                           @"login_type" : [NSNumber numberWithInteger:type],
                           @"code" : identify,
                           @"lon" : user.lon.length != 0 ? user.lon : @"0",
                           @"lat" : user.lat.length != 0 ? user.lat : @"0"};
    KKLog(@"登录参数 = %@",dict);
    [self loginWithParamDict:dict Block:resultCompletion];
}

+ (void)loginWithParamDict:(NSDictionary *)paramDict Block:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:POST url:DriverLogin parameters:paramDict completion:^(BOOL isSuccess, id json) {
        NSDictionary *jsonDict = (NSDictionary *)json;
        NSInteger code = [jsonDict[@"code"] integerValue];
        if (code == 1) {
            NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
            [userDefaults setBool:NO forKey:kIsLogout];
            [userDefaults setBool:NO forKey:kFirstIntoApp];
            NSString * dataStr = [CP_AES cpAes256_decryptToString:jsonDict[@"data"]];
            dataStr = [dataStr stringByTrimmingCharactersInSet:[NSCharacterSet controlCharacterSet]];
            NSData *jsonData = [dataStr dataUsingEncoding:NSUTF8StringEncoding];
            NSError *err;
            NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableContainers error:&err];
            KKLog(@"当前用户信息 dic = %@",dic);
            [UserHelper savePersonalInfoToCacheWith:dic];
            User *user = [UserHelper shareInstance].user;
            CLLocationCoordinate2D coordinate = [KKMapManager sharedInstance].theUserLocation.coordinate;
            user.lat = [NSString stringWithFormat:@"%f", coordinate.latitude];
            user.lon = [NSString stringWithFormat:@"%f", coordinate.longitude];
            [myNoti postNotificationName:kLoginSuccess object:nil];
            if ([paramDict[@"login_type"] intValue] == 0) {
                //只是登录的时候（不包含自动登录）
                [myNoti postNotificationName:kOnlyLoginSuccess object:nil];
            }
            if ([dic[@"coupons_show_flag"] integerValue] == 1) {
                [myNoti postNotificationName:newVoucher object:nil];
            }
            //开屏红包和新人红包的通知
            if ([dic[@"get_new_user_red_packet_money"] floatValue] > 0 || [dic[@"get_coopen_red_packet_money"] floatValue] > 0) {
                [myNoti postNotificationName:OpenVoucher object:nil];
            }
        }
        resultCompletion(isSuccess,json);
    }];
}

//绑定用户手机
+(void)bindTheUserWithPramaDict:(NSDictionary *)parmaDict block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:BindUserInfo parameters:parmaDict completion:^(BOOL isSuccess, id json) {
        KKLog(@"%@",json);
        NSDictionary *jsonDict = (NSDictionary *)json;
        NSInteger code = [jsonDict[@"code"] integerValue];
        
        if (code == 1) {
            NSString * dataStr = [CP_AES cpAes256_decryptToString:jsonDict[@"data"]];
            dataStr = [dataStr stringByTrimmingCharactersInSet:[NSCharacterSet controlCharacterSet]];
            NSData *jsonData = [dataStr dataUsingEncoding:NSUTF8StringEncoding];
            NSError *err;
            NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableContainers error:&err];
            [UserHelper savePersonalInfoToCacheWith:dic];
            //            [[NSNotificationCenter defaultCenter] postNotificationName:RequestJPushId object:nil];
        }
        
        resultCompletion(isSuccess,json);
    }];
}

//绑定极光ID
+ (void)bindUserRegistrationidWithUdid:(NSString *)registerId
                             loginFlag:(int)loginFlag
                                 block:(Resultcompletion)resultCompletion
{
    NSDictionary *dict = @{@"udid":registerId,
                           @"is_last_time_login_flag" : @(loginFlag)};
    [[KKNetWorking getShard] request:POST url:BindUserRegistrationId parameters:dict completion:^(BOOL isSuccess, id json) {
        KKLog(@"绑定极光ID请求回调 json = %@",json);
        resultCompletion(isSuccess, json);
    }];
}

//上传头像
+ (void)upLoadHeadImageWithHeadImage:(UIImage *)image block:(Resultcompletion)resultCompletion
{
    NSMutableDictionary *paramDict = [NSMutableDictionary dictionary];
    [paramDict setObject:image forKey:@"headImg"];
    [[KKNetWorking getShard] request:POST url:UpLoadUserHeadImg parameters:paramDict completion:^(BOOL isSuccess, id json) {
        KKLog(@"%@",json);
        resultCompletion(isSuccess,json);
    }];
}

//上传封面
+ (void)upLoadCoverImageWithHeadImage:(UIImage *)image block:(Resultcompletion)resultCompletion
{
    NSMutableDictionary *paramDict = [NSMutableDictionary dictionary];
    [paramDict setObject:image forKey:@"cover_img"];
    [[KKNetWorking getShard] request:POST url:SetMomentsCoverImg parameters:paramDict completion:^(BOOL isSuccess, id json) {
        KKLog(@"%@",json);
        resultCompletion(isSuccess,json);
    }];
}

//修改用户信息
+ (void)upDataUserInfoForUserMessage:(NSDictionary *)userInfo block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:UpdateUserInfo parameters:userInfo completion:^(BOOL isSuccess, id json) {
        KKLog(@"%@",json);
        resultCompletion(isSuccess,json);
    }];
}

//账号退出登录
+ (void)userLogoutWithBlock:(Resultcompletion)resultCompletion
{
    NSDictionary *dic = @{@"USERID": [UserHelper shareInstance].user.user_id};
    [[KKNetWorking getShard] request:POST url:UserLogout parameters:dic completion:^(BOOL isSuccess, id json) {
        KKLog(@"%@",json);
        resultCompletion(isSuccess,json);
    }];
}

//获取热门城市和客服电话
+ (void)getHotCityAndHotlineWithBlock:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:GetHotCityAndHotline parameters:@{} completion:^(BOOL isSuccess, id json) {
//        KKLog(@"%@",json);
        resultCompletion(isSuccess,json);
    }];
}

//APP版本更新
+ (void)userAppVersionUpdataWithBlock:(Resultcompletion)resultCompletion
{
    NSDictionary *infoDictionary = [[NSBundle mainBundle] infoDictionary];
    NSString *appCurVersion = [infoDictionary objectForKey:@"CFBundleShortVersionString"];
    NSDictionary *dic = @{@"os":@"iOS",@"cur_version":appCurVersion};
    [[KKNetWorking getShard] request:GET url:UserAppVersionUpdate parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

+ (void)userLocationCollectionList:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetUserLocationCollectionList parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

+ (void)submitUserLocationCollectionWithDictionary:(NSDictionary *)dic block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostSubmitUserLocationCollection parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}
//删除用户的收藏位置接口
+ (void)deleteUserLocationCollection:(NSDictionary *)dic block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostDeleteUserLocationCollection parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//获取用户常用地址
+ (void)getUserUsedAddressblock:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetUserUsedAddress parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//处理好友申请
+ (void)postHandleFriendApplyWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:HandleFriendApply parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//获取用户的优惠券列表(支付时选择优惠券列表)
+ (void)postGetUserDiscountListWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostGetUserDiscountList parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//获取代金券列表
+ (void)getCouponList:(NSDictionary *)parameters resultCompletion:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:getUserCouponList parameters:parameters completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//获取代金券列表
+ (void)getAlertCouponList:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:getUserAlertCouponsList parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//收货地址列表
+ (void)getGetReceiptAddressListBlock:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetGetReceiptAddressList parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//添加收货地址
+ (void)postAddReceiptAddress:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostAddReceiptAddress parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//更新收货地址
+ (void)postUpdateReceiptAddress:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostUpdateReceiptAddress parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//设置默认收货地址
+ (void)postSetDefaultReceiptAddress:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostSetDefaultReceiptAddress parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//删除收货地址
+ (void)postDeleteReceiptAddress:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostDeleteReceiptAddress parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}


//银行卡类别查询
+ (void)postBankcardQuery:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:BankcardQuery parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//银行卡四元素校验
+ (void)postBankcardVerify:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:BankcardVerify parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//银行卡校验验证码确认
+ (void)postBankcardVerifyPhoneCode:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:BankcardVerifyPhoneCode parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//余额提现前预先返回信息
+ (void)getWithdrawPreInfo:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:WithdrawPreInfo parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//余额提现
+ (void)postWithdrawAmout:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:WithdrawAmout parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户钱包首页
+ (void)getUserWalletIndex:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetUserWalletIndex parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户钱包 - 账户明细
+ (void)getUserWalletTransactions:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetUserWalletTransactions parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户钱包-月账单
+ (void)getUserWalletMonthlyStatements:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetUserWalletMonthlyStatements parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户钱包-账单明细-余额明细详情
+ (void)getUserWalletStatementDetails:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetUserWalletStatementDetails parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//手机验证码校验接口
+ (void)postValidateCodeAuth:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostValidateCodeAuth parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//验证用户支付密码
+ (void)postUserPayPasswordValidate:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostUserPayPasswordValidate parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//设置用户支付密码
+ (void)postSetUserPayPassword:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:POST url:PostSetUserPayPassword parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户钱包-充值金额列表
+ (void)getUserWalletTopUpAmountList:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetUserWalletTopUpAmountList parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户钱包-充值
+ (void)postUserWalletTopUp:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostUserWalletTopUp parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//APP下载后打开更新下载的记录客户端信息
+ (void)appOpenAndUpdateRecordWithSecret_token:(NSString *)secret_token
                                         Block:(Resultcompletion)resultCompletion
{
    if (!secret_token) {
        secret_token = nil;
    }
    NSDictionary *paramDict = @{@"secret_token":secret_token, @"appType":@"1"};
    [[KKNetWorking getShard] request:POST url:AppOpenAndUpdateRecord parameters:paramDict completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//获取用户的商家代金券列表(支付时选择商家代金券列表)
+ (void)postGetUserCouponListSetByBusiness:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:PostGetUserCouponListSetByBusiness parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//好友资料
+ (void)getFriendDetailWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:FriendDetail parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//申请添加好友
+ (void)postFriendApplyWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:FriendApply parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//领取进店红包接口
+ (void)postReceiveRedPacketWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:POST url:ReceiveRedPacket parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//店铺分享红包
+ (void)postStoreShareRedPacketWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:POST url:StoreShareRedPacket parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//分享到第三方平台领取店铺分享红包
+ (void)postShareToGetStoreRedPacketWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:POST url:ShareToGetStoreRedPacket parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//红包详情 (旧接口暂时无用)
+ (void)redPacketDetailWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:RedPacketDetail parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//获取红包领取信息(旧接口暂时无用)
+ (void)getRedPacketReceiveInfoWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetRedPacketReceiveInfo parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//点赞红包
+ (void)postLikeRedPacketWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:LikeRedPackLet parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//微博转发红包
+ (void)postRepostRedPacketWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:RepostRedPacket parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//微博分享到第三方平台领取转发红包
+ (void)postShareToGetRepostRedPacketWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:ShareToGetRepostRedPacket parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//领取抖音交友红包接口
+ (void)postReceiveFriendsRedPacketWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:ReceiveFriendsRedPacket parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户钱包
+ (void)getUserWalletIndexBlock:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:GET url:UserWalletIndex parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户余额明细
+ (void)getWalletTransactionsWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:BalanceTransactions parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//  红包余额明细
+ (void)getRedPacketsDetailsWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:BalanceDetails parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户红包池明细
+ (void)getRedPacketPoolTransactionsWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:RedPacketPoolTransactions parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户新增粉丝
+ (void)getUserFocusListWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:GET url:UserFocusList parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户粉丝列表
+ (void)getUserFansListWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:UserFansList parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户新增粉丝
+ (void)getUserNewFansListBlock:(Resultcompletion)resultCompletion;
{
    [[KKNetWorking getShard] request:GET url:UserNewFansList parameters:nil completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//用户粉丝列表
+ (void)getuserReadNewFans
{
    [[KKNetWorking getShard] request:GET url:userReadNewFans parameters:nil completion:^(BOOL isSuccess, id json) {
        
    }];
}

//解除好友关系
+ (void)postRemoveFriendRelationWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:RemoveFriendRelation parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//红包池充值
+ (void)postUserRedPacketTopUpWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:UserRedPacketTopUp parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//商品管理 - 获取商品列表
+ (void)getGoodsListWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GetGoodsList parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//商品管理 - 删除商品
+ (void)postDeleteGoodsWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:DeleteGoods parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//附近社交商品详情
+ (void)getGoodsDetailWithDic:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:GET url:GoodsDetail parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//领取社交商品分享红包
+ (void)postGetGoodsRedPacket:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:GetGoodsRedPacket parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

//社交商品收藏列表
+ (void)getGoodsCollectionList:(NSDictionary *)dic Block:(Resultcompletion)resultCompletion
{
    [[KKNetWorking getShard] request:POST url:goodsCollectionList parameters:dic completion:^(BOOL isSuccess, id json) {
        resultCompletion(isSuccess,json);
    }];
}

@end

